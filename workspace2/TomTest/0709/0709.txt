 WEB-INF - src		--> .java
 		 - classes	--> .class
 		 - lib		--> .jar
 		 - web.xml


 다이나믹 웹  프로젝트 ---> servers에서 서버 켜서!	 
 		 
 		 
============================================================================================
 <GET방식과 POST방식>★
  - 클라이언트 기준!
  - HTTP 전송 방식

  1. GET방식
	- 서버에 있는 정보를 가져오기 위해 설계된 방법
   	 (서버에 있는 HTML을 브라우저로 가져오기 위해!)
	- 경우에 따라 서버로 전달할 수 있는 데이터 크기는 최대 240byte.
	- QUERY_STRING을 통해서 서버로 데이터를 전달.
   
		예)
		http://192.168.0.96:8282/TomTest/0709/login_form
		http://192.168.0.96:8282/TomTest/count
	   		
		http://192.168.0.96:8282/TomTest/count?username=gildong&pass=1234
	   												===> querystring 또는 parameter!
   												
	- QUERY_STRING은 '속성명 = 속성값' 형태를 갖고 만약 두개 이상의 속성인 경우 '&'를 통해 구분
	- URL이 노출되기 때문에 보안 문제가 발생할 수 있다.
   
  2. POST방식
  	- 서버로 정보를 올리기 위해 설계된 방법. (로그인폼, 회원가입폼, 회원수정폼)
  	  (폼 내의 데이터를 form action에 명시된 URL로 전송!)
  	- 서버에 전달할 수 있는 데이터 크기는 제한이 없다.
  	- URL에는 파리미터가 표시되지 않는다. (보안에 유리)
  	
=============================================================================================
 <URL> http://192.168.0.96:8282/TomTest/0709/result?id=gildong&pwd=1234
       ----   ------------ ---- ------- ----------- -------------------
     통신프로토콜    	 호스트 PC	    포트넘버  웹컨텍스트  서비스페이지		 전달파라미터
     					  ------
     					  서비스채널(종류)
     					 ------------
     				c:/apache-tomcat/webapps
     				
=============================================================================================
 ※ <페이지 이동 시 경로 표현 방법> ★
  ==> <form action="이동경로">, <a href="이동경로">텍스트 또는 이미지</a>
  	  location.href="이동경로"
  	  
    기준(현재 페이지) ==> http://192.168.0.96:8282/TomTest/0709/login_form.html
    
  HTML	--------이동--------> Servlet페이지 (/0709/result)
  
  1. 전체 경로
  	<form action="http://192.168.0.96:8282/TomTest/0709/result">
  
  2. 경로 맨 앞에 '/'를 사용하는 경우 ==> '/' : 서버루트 경로!
     -------						   ===> http://192.168.0.96:8282/
     (HTML, JSP경로에서) 
     
    <form action="/TomTest/0709/result">
    
      ※주의 : web.xml에서 경로를 표시하는 경우 맨 앞의 '/'는 컨텍스트 루트 경로!
 									===> http://192.168.0.96:8282/TomTest
  
  3. 경로 맨 앞에 '/'를 사용하지 않는 경우 ==> 현재 페이지의 경로 가져오기 
 
    기준(현재 페이지) ==> http://192.168.0.96:8282/TomTest/0709/login_form.html
    				------------------------------------- ---------------
    				  	 경로(path) (마지막 '/'전 까지)			  파일(페이지)
    				  	 
    <form action="result">
    	--> http://192.168.0.96:8282/TomTest/0709/result
    	
    <form action="aa/bb/cc">
    	--> http://192.168.0.96:8282/TomTest/0709/aa/bb/cc
    	
    <form action="../dd/result">
    	--> http://192.168.0.96:8282/TomTest/dd/result
    	
--------------------------------------------------------------------------------
 참고) 경로 '.'	: 현재 경로 (current directory)
 	   경로 '..'	: 부모 경로 (parent directory)
 	   
           기준(현재 페이지) ==> http://192.168.0.96:8282/TomTest/0709/login_form.html	   
           													 ----------------
           													 	 file기준!
           													 	 
  1. <form action="../result">
  		--> http://192.168.0.96:8282/TomTest/result
  		
  2. <form action="../../result">
  		--> http://192.168.0.96:8282/result
  		
  3. <form action="result">
		--> http://192.168.0.96:8282/TomTest/0709/result
		
  4. <form action="/result">
  		--> http://192.168.0.96:8282/result (ROOT폴더에 정의되어있어야됨)
--------------------------------------------------------------------------------
 기준(현재 페이지) ==> http://192.168.0.96:8282/TomTest/0709/login_form.html

 문제) 만약, web.xml파일에 <url-pattern>/result</url-pattern>가상경로 설정 시
	--> 에러 없이 이동하는 <form>태그의 속성 action의 경로는?
	
	<form action="../result">
	<form action="/TomTest/result">
	
=========================================================================================
 <mission>
  - 서블릿으로 계산기 만들기(HTML사용x ---> .html파일을 사용x)
  - 클래스명 : CalcServlet 새로 작성, 이전 Calculator사용
	첫페이지) doGet요청!
	
				서블릿 계산기
	---------------------------------
	  su1	oper	su2		계산(버튼)

  ====================================================
	두번째 페이지) doPost 숫자 입력 후 계산 버튼을 클릭 했을때

				서블릿 계산기
	---------------------------------
	  su1	oper	su2		계산(버튼)


=========================================================================================
 <mission2>
  - 사원테이블(EMP)과 부서테이블(DEPT)을 검색하여 브라우저 화면에 사원번호, 사원명, 입사일, 급여, 부서명을 출력하시오.
  	==> HTML테이블에 출력

	1. 서블릿 클래스 com.encore.t0709.EmpServlet  (/empInfo매핑)
		--> service()메소드 사용
		--> HTML 출력 : table, tr, th, td 엘리먼트 사용.
		
	2. DAO클래스 com.encore.t0709.dao.EmpDAO
		--> findAll()메소드 사용
		
	3. Emp클래스 com.encore.t0709.vo.Emp
		--> 관련있는 속성의 묶음, 조회된 결과에서 한 행을 표현
		--> 사원번호(empno), 사원명(ename),
			입사일(hiredate) ==> java.util.Date, java.sql.Date
			급여(sal), 부서명(dname)	
		
		
		
		
		
		
     				