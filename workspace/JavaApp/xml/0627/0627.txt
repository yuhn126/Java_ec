
 <XML>
  - XML이란? [데이터 저장 방식]
  			 ----
  			 표준(W3C)데이터 ---> 호환성 높은 데이터
  			 텍스트 데이터       ---> 특정 binary아님!! (.doc파일은 MS오피스에서만)
  			 
  - XML문서내의 데이터 표현 방법(데이터의 저장(표현)위치)?
  	---> 시작
  	
  	
  	예) <person name = "홍길동"> ----> 데이터 : 홍길동
  			<age>13</age>	   ----> 데이터 : 13
  		</person>
  		
  		---> name속성명과 age태그명은 데이터를 서술(설명)하고 있음!
  								-----------------------
  									XML은 서술 태그!
  - DTD(DocumentTypeDefinition)란?
  	----> 문서작성규칙
  		  ---------
  		 (XML문서내에 출현할 엘리먼트, 속성의 종류, 순서, 데이터의 종류를 정의)
  	----> XML문서 구성시 선택정 사항이다.
  	
  	
  - XMLSchema? DTD와 같은 개념(DTD업그레이드) ---> 자료형 풍부(기본자료형 + 사용자정의자료형)
  	
  	선언위치)
  		- DTD
  			<?xml version="1.0"?>
  				DTD선언
  			<root>
  			</root>
  			
  		- XMLSchema
  			<?xml version="1.0"?>
  			<root 스키마 선언>
  			</root>	
  			
  	※주의) DTD혹은 XMLSchema를 동시에 선언할 수 없다.
  	
  - DOM의 정체? 파서 Parser(분석기)
  			  ---> 누구에 대한? XML문서
  			  ---> 방식 : tree(메모리)기반 분석
  	
  
  - SAX의 정체? 파서 Parser	
  			  ---> 누구에 대한? XML문서 
  			  ---> 방식 : event(사건)기반 분석
  			  				  ----
  			  				     미팅	
  			
===============================================================================
 
 <XML문법(spec)정리> ----> well-formed(잘 구성된)XML문서!
 
  1. 문서 안에 최소 한 개 이상의 element를 가져야 함.
	     -------test.xml-------
	     <?xml version="1.0"?>
	     <!-- 나주석 -->			===> (X)
	     ----------------------
	     
	     -------test.xml-------
	     <A/>					===> (O)
	     ----------------------
     
  2. 문서 전체를 감싸는 단 한 개의 엘리먼트(Root Element)가 존재해야 함.
		 -------test.xml-------
	     <A/>
	     <B/>					 ===> (X)
	     ----------------------
	  						
		 -------test.xml-------
		 <ROOT>
	     	<A/>
	     	<B/>				
	     </ROOT>				 ===> (O)
	     ----------------------
  
  3. 시작태그가 있다면 그것에 매핑되는 끝태그가 반드시 존재해야 함.
  	태그종류)
  		- 시작태그 <PERSON>
  		- 끝태그    </PERSON>
  		- 빈태그    <PERSON/>
  		
		-------test.xml-------
		<ROOT>
			<br>				
		</ROOT>				 	 ===> (X)
		----------------------
		
		-------test.xml-------
		<ROOT>
			<br/>				
		</ROOT>				 	 ===> (O)
		----------------------
		
		-------test.xml-------
		<ROOT>
			<br></br>				
		</ROOT>				 	 ===> (O)
		----------------------
  
  4. XML은 대소문자 구분(참고 : HTML은 태그명에 대소문자 구분X)
	
		<person> </Person>  (X) ---> 끝태그 없음 에러 발생!
		 
		<person> </person>  (O)
		
  5. 엘리먼트는 포함 관계가 꼬이면 안됨.
	  	<a>
	  		<b></b>
	  		<c></c>
	  	</a>
	  	
		  	---> (O) b,c엘리먼트(자식)는 a엘리먼트(부모)에 포함됨
		  			 b와 c는 형제!
	  			 
	  	<a>
	  		<b></b>
	  		<c>
	  	</a>
	  		</c>
	  		
  			---> (x) a,c엘리먼트 : 누가 부모이고 자식인지 알 수 없음 : 에러!
  
  6. xml선언은 전체 생략 가능하나 선언하는 것을 권장.
  	<?xml version='1.0' encoding='utf-8'?>
  						---------------
  						현재 작성되는 xml문서내에 다국어를 사용하겠음.
  						
  		==> version속성은 생략 불가
  		==> 반드시 version속성을 먼저, encoding속성을 나중에 기술
  		==> 속성값은 ''(작은 따옴표) 또는 ""(큰 따옴표) 사용
  		==> '<?xml'앞에 공백(whitespace)을 쓰면 절대 안됨!


  7. 태그의 내용(content)에 제한된 문자가 있다. <시작태그> 내용 </끝태그>
  						--------
  	  ===> '&' '<' ']]>'
  	  		====> 사용하면 에러
  	  			    해결책)
  	  			    	- 제한된 문자를 replace()메소드를 변환
  	  			    				replace('<','&lt;')
  	  			    	- CDATA섹션을 사용
  	  			    	  <![CDATA[	  이곳은 데이터 문자만 표현하는 영역입니다 <  &	]]>
  
  7-2. 속성값에 제한된 문자
  	  ===> '&'  '<'
  	  
  8. 속성값은 반드시 인용부호(작은 따옴표, 큰 따옴표)를 사용
  	 HTML경우) <table border=1 bgcolor=yellow></table>	(O)
  
  	 XML경우) <table border=1 bgcolor=yellow></table>	(X)
  	 		 <table border='1' bgcolor="yellow"></table>
  	 		 
  9. 서로 다른 속성은 반드시 공백을 통해 구분!
  	 <table border=1 cellpadding="5"></table>		(X) 인용부호 없음
  	 <table border='1'cellpadding="5"></table>		(X) 속성명 앞에 공백 없음
  	 <table border='1' cellpadding="5"></table>		(O)
  	 <table border='1' 
  	 
  	 			cellpadding="5"></table>			(O)
  
  10. 주석문(설명문, comment)에 제한된 문자
  	===> '--'
  	
  	<!-- c-o-m-m-e-n- -t -->	(O)
  	<!-- com--ment -->			(X)
  
  
  
  
  
  
  
  