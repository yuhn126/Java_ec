 <데이터베이스>
 
 - 데이터베이스의 목적
   - 데이터 독립 유지 - 데이터와 응용 프로그램의 독립 (물리적, 논리적)
   - 데이터 중복의 최소화
   - 데이터의 공유
   - 데이터의 보안 유지
   - 데이터 무결성의 유지 
   
   
   
 <DB관련 수업>
   Java - SQL - JDBC - iBatis(MyBatis)
   
 <DB접속>
  - 접속 툴 : 토드. SQL Developer(오라클 제공), 이클립스, SQL*PLUS
  - SQL*PLUS 통한 접속
  		1. sqlplus 계정명/패스워드
  		2. sqlplus 
  			 - Enter user-name : scott
  			 - Enter user-name : tiger --> 입력된 비밀번호는 보이지 않음
  			 
 <오라클 계정>
  1.SYS : 오라클 Super사용자 계정이며
  		    데이터베이스에서 발생하는 모든 문제들을 처리 할 수 있는 권한을 가짐.
  		
  	 sqlplus /nolog
  	 conn /as sysdba
  	 
  2. SYSTEM : 오라클 데이터베이스를 유지보수 및 관리할 때 사용하는 계정.
  
	명령 프롬프트창 : sqlplus system/oracle
	SQL 명령창      : conn system/oracle
	
  3. SCOTT, HR : 처음 오라클을 사용하는 사용자를 위해 만들어 놓은 사용자 계정
  

 <데이터베이스 관리자 접속을 해서 사용자 [SCOTT] 만들고 권한 주기>
  1. 관리자 접속!
  	  C:\User\Playdata>sqlplus
  	  Enter user-name: system
  	  Enter password: oracle	<=====	입력 단어 보이지 않음
  	  SQL>_						<=====	SQL 관련 명령어 입력 대기상태!
  	  
  
  2. 사용자 계정 만들기
  	CREATE USER [user_name]
  	IDENTIFIED BY [password]
  	
  	create user scott
  	identified by tiger;
  	----> User created.
  	
  	----> 생성된 scott계정의 접속 시도!
  	방법1) 현재 연결된 [system]관리 계정에서 접속을 끊고 다시 [scott]유저 접속하기.
  			---> exit
  			---> sqlplus scott/tiger
  	방법2) 계정 접속만 변경하기
  			---> conn scott/tiger
  			
  3. 생성된 계정(User)에게 연결 권한 부여하기(<--- 관리자가)
  		grant connect, resource to scott;
  		
  		
  <접속 계정에서의 생성된 테이블 종류 보기(검색)>
   select * from tab;
     ---> no rows selected (검색된 테이블 정보 없음)
     
  <예제 테이블 정보 가져오기(복사하기)>
  imp scott/tiger file=E:\hnyu\Java\Java_ec\workspace\JavaApp\oracle\0522\scottTable.dmp fromuser=scott touser=scott constraints=y commit=y ignore=y tables=dapt,emp,salgrade
  	
  ※주의) SQL>_프롬프트상태에서는 SQL관련 명령어만 입력 --> imp는 sql명령어가 아님.
  	====> C:\User\Playdata>_프롬프트상태에 imp입력!
  	====> 반드시 한 줄로 입력!
  	====> file뒤에 dmp파일이 실제 존재하는 곳을 명시!
  
  
  ==> 확인)
  SQL> select tname from tab;
  
  TNAME
  -----------------------------------------------------------
  DEPT			(부서테이블)
  EMP			(사원테이블)
  SALGRADE		(급여등급테이블)
  
  
  <각 테이블의 구조(컬럼명, 자료형) 검색>
   - DESC[RIBE] 테이블명
   - 테이블을 구성하는 컬럼(속성)과 자료형을 표현
   
	  SQL> describe emp
		 Name                                      Null?    Type
		 ----------------------------------------- -------- ----------------------------
		 EMPNO    (사원번호)                         NOT NULL NUMBER(4)
		 ENAME    (사원 명)                                   VARCHAR2(10) //가변길이
		 JOB      (직책)                                     VARCHAR2(9)
		 MGR      (매니저, 직속 상사)                           NUMBER(4)
		 HIREDATE (입사일, 고용일)                             DATE
		 SAL      (급여)                                     NUMBER(7,2)
		 COMM     (커미션,특별수당,성과 급여)                     NUMBER(7,2)
		 DEPTNO   (사원이 속한 부서 번호)                         NUMBER(2)
	  
	  
	  SQL> desc dept	===>	(부서 테이블
		 Name                                      Null?    Type
		 ----------------------------------------- -------- ----------------------------
		 DEPTNO  (부서번호)                          NOT NULL NUMBER(2)
		 DNAME   (부서 명)                                    VARCHAR2(14)
		 LOC     (부서위치)                                   VARCHAR2(13)
		 
		 
	  SQL> desc salgrade	===>	(급여 등급 테이블 - 3개의 속성으로 구성)
		 Name                                      Null?    Type
		 ----------------------------------------- -------- ----------------------------
		 GRADE (등급1 ~ 5)                                   NUMBER
		 LOSAL (최소급여 바운드)                                NUMBER
		 HISAL (최대급여 바운드)                                NUMBER
		 
==========================================================================================		 
  
 <SQL> Structured Query Language (구조적인 질의어)
  종류)암기사항
  
  1. 데이터 정의어(DDL) : Data Definition Language
  		- 데이터베이스 관리자나 응용프로그래머가 데이터베이스의 논리적인 구조를 정의하기 위한 언어.
  		- 객체(예:table,view,sequence,trigger)에 대한 정의
  		- 명령어 : CREATE, DROP, ALTER, TRUNCATE
  		
  2. 데이터 조작어(DML) : Data Manipulation Language ★
  		- 데이터베이스에 저장된 데이터를 조작(추가, 삭제, 수정)하기 위해 사용하는 언어
  		- 명령어 : INSERT, DELETE, UPDATE
  		
  3. 데이터 제어어(DCL) : Data Control Language
  		- 데이터베이스에 대한 접근 권한 부여등의 데이터베이스 시스템의 관리를 위한 목적으로 사용되는 언어
  		- 명령어 : GRANT(권한 부여), REVOKE(권한 회수)
  		
  4. 데이터 질의어(DQL) : Data Query Language ★	
  		- 검색, 조회 명령어
  		- 명령어 : SELECT
  		
  5. 트랜잭션 제어어(TCL) : Transaction Control Language
  		- 논리적인(DML)작업 단위의 물음
  		- 명령어 : COMMIT, ROLLBACK, SAVEPOINT(부분 작업 취소에 사용)
  
==========================================================================================
 <테이블에 저장된 데이터에 대한 검색(조회)>
 ---> select명령문 사용  
 
 형식)
 	 SELECT (조회하고싶은)컬럼명
 	 FROM 	(컬럼이 속한)테이블명;
 	 
 	 SELECT 컬럼명1, 컬럼명2
 	 FROM 테이블명;
 	 
 	 - 부서테이블 조회(모든 속성)
	 	select deptno, dname, loc
	 	from dept;
	 	 
	 	select *	-- from절에 명시된 테이블에 속한 모든 컬럼
	 	from dept;
	 	 
	 - 부서테이블 조회(부서명, 부서위치)
		select DNAME, loc;
		===> 에러발생) ORA-00923 : FROM keyword not
		
 <테이블 내의 데이터를 검색>
 
	형식)
		SELECT 컬럼명1, 컬럼명2
		FROM (검색하고자 하는 컬럼명이 속한)테이블명;
		
	문제1) 급여등급, 최소급여, 최대급여를 검색(조회)하시오.
			: SELECT GRADE, LOSAL, HISAL 
			  FROM SALGRADE;
			  
	문제2) 부서명과 부서위치를 출력하시오.
			: SELECT DNAME, LOC 
			  FROM DEPT;
			  
	문제3) 사원번호, 사원명, 입사일, 급여를 조회(출력)하시오.
			: SELECT EMPNO, ENAME, HIREDATE, SAL 
			  FROM EMP;
			  
	문제4) "안녕, SQL~!!"을 화면에 출력하시오
	
		※주의) 오라클은 문자, 문자열 데이터를 표현할 때 작은 따옴표를 사용!
			SELECT '안녕'
			FROM EMP;			
		  ==> '안녕, SQL~!!' --> 14행 출력
		  
		※오라클에서는 테이블에 상관없는 데이터를 출력하기 위해 시스템을 테이블을 지원!
		  ---> DUAL테이블 (dummy테이블, 가상테이블)
			  
		<별칭(alias) 사용하기>
		 형식)
		 	SELECT 컬럼명 [AS] 별명
		 	FROM   테이블명;
		 	
		 	SELECT 컬럼명 [AS] "별 명"
		 	FROM   테이블명;
		 	
		 ----> 정리) SQL에서 ''(작은따옴표)는 문자(열) 데이터를 표현
						   ""(큰 따옴표)는 별명을 표현하는 용도로 사용!
						   
			SELECT EMPNO, ENAME, HIREDATE
			FROM EMP;
			
			
		<SELECT 문법>
		 SELECT 컬럼명 또는 출력할 데이터
		 FROM 테이블명;
		 				
	문제5) 화면에 사원번호와 사원명을 출력하시오
			: SELECT EMPNO AS 사원번호, ENAME AS 사원명
			 (SELECT EMPNO AS "사원번호", ENAME "사원명")
			  FROM EMP;
			  
	문제6) 각 사원들의 사원번호, 사원명, 급여, 연봉을 출력하시오.
			: SELECT EMPNO, ENAME, SAL, SAL*12? 
			  FROM EMP;
	
	문제7) 사원들의 이름과 직책을 출력하시오. (출력변경 --> SMITH사원의 직책은 CLERK입니다.)
		<Concatenation 연산자>
		 ---> 접합연산자 : ||
		 예) '문자열1' || '문자열2' ==> '문자열1문자열2'
		 
			 SELECT ENAME || '사원의 직책은 ' || JOB || '입니다.' "사원직책"
			 FROM EMP;
			
	문제8) 사원들이 갖는 직책을 출력하시오. (중복된 직책은 제거해서 출력)
		<DISTINCT 키워드> : 중복제거 기능
		형식)
			SELECT (중복이 예상되는)컬럼명
			FROM 테이블명;
			
			: SELECT DISTINCT JOB
			  FROM EMP;
			----> EMP테이블의 14명 사원은 위의 5개 직책중 한개를 갖는다.
			
	문제9) 10과 3의 사칙연산의 결과를 출력하는 SQL문을 작성하시오
 			: SELECT 10+3 더하기, 10-3 빼기, 10*3 "곱하기", 10/3 나누기, floor(10/3) 몫구하기, mod(10,3) "나머지구하기"
 			  FROM DUAL;
 			  
 		SQL에서는 정수 실수 구분X
 
 
 
 
 
 
 
  
  