 <데이터 베이스>
  - 체계회된 데이터의 모임 
  - 여러 사람이 공유하여 사용할 목적으로 통합, 관리하는 데이터의 집합
 
 <DBMS> (DataBase Management System)
  - 데이터베이스를 관리하는 시스템
  - 데이터를 효과적으로 이용하도록 정리, 보관하는 기본 소프트웨어
  - 데이터 추가, 조회, 수정, 삭제 등 기능을 집대성한 소프트웨어 패키지
  - 기능 : 데이터베이스를 구축하는 틀을 제공
  		   효율적으로 데이터를 검색하고 저장하는 기능
  		   응용 프로그램들이 데이터베이스에 접근할 수 있는 인터페이스 제공
  		   장애에 대한 복구, 보안 유지 기능 제공
  - 종류 : Oracle, MySQL, Microsoft SQL Server, PostgreSQL, MongoDB ...
==========================================================================================================
 <SQL> - Structured Query Language
 
 1. DQL(데이터 조회, 검색, 출력)
  - select --> 열 제어
  
  	DQL문법)
  		select
  		from
  		where
  		group by
  		having
  		order by
  		
  	실행순서) 2 - 3 - 4 - 5 - 1(DB로 부터의 조회, 인줄) - 6 - 1(정렬된 결과를 출력)
  
   select distinct(중복제거) 컬럼명1 별명, 컬럼명2 "별 명", 데이터, '안녕하세요', 300, 2*3
   from 테이블명;
   
 2. DML(데이터 조작 - 추가, 수정, 삭제)
  - insert, delete, update
  
 3. DDL(데이터[객체 - table, view, sequence, trigger] 정의)			: Auto Commit
  - create, drop, alter, rename, truncate
  				  -----
  				 구조변경(컬럼수 변경 - emp테이블에 email컬럼을 추가
  				 				- ename 15byte를 30byte로 변경)
  
 4. DCL(DB관리자가 일반사용자에게 권한 부여, 권한 회수)
  - grant(권한 부여), revoke(권한 회수)
  
 5. TCL
  - 논리적인 (DML)작업단위 : transaction
  - commit(DB에 물리적인 반영), rollback, savepoint
==========================================================================================================
 
 SQL*PLUS 명령어 : 접속 툴 내에서 출력 형식을 지정하는 등 환경설정.
 --------
    접속 툴
    
 <SQL>
  - 관계형 데이터베이스의 ANSI표준언어
  - 여러 줄 실행
  - 종결 문자 필요(;)
  - 키워드 단축 불가(SELECT --> SEL(X))
  - 버퍼에 마지막 명령문 저장
  - 대소문자 구분 없음 (단, 데이터를 표시할 때는 반드시 대소문자 구분함!)
   
   
 <SQL*PLUS>
  - 오라클 DB 접속툴
  - 한 줄 실행
  - 종결문자 불필요
  - 키워드 단축 가능
  - 버퍼저장 안함
  
 SQL*PLUS명령어 )
 	L[IST] : 가장 마지막에 실행한 SQL문 출력
 	ED[IT] : 지정된 파일을 메모장을 통해 열어줌.
 	SAVE 파일명 : 명시된 파일명으로 버퍼에 있는 SQL문을 저장
 	GET 파일명 : 명시된 파일 SQL문 얻어오기
 	SPOOL(갈무리)
 		#시작
 		SPOOL 파일명
 			SQL문1;
 			SQL문2;
 			SQL문3;
 			
 		#끝
 		SPOOL OFF
 		
   		===> SQL문1부터 SQL3까지 지정된 파일명으로 저장
   	HOST : SQL접속을 유지한 상태에서 커맨드 싱태로 이동
   	EXIT : 커맨드상태에서 SQL프롬프트상태로 이동
   	
   	LINE, PAGESIZE(한 페이지에 출력되는 라인사이즈) : 출력 형식
   	형식) SET 명령어 값
   			--> 설명참조) ? set
   		/			: 버퍼에 저장된 마지막 SQL문 실행
   		R[UN]		: 버퍼에 저장된 마지막 SQL문 출력과 실행
   		@test.sql	: 파일 내의 sql문 실행
   
==========================================================================================================
 <WHERE절> - 조건절, 출력행을 제어하는 역할
 
  - 형식)
  		SELECT	컬럼명					---->	전체 열 중 원하는 열만 선택 : 열을 제어
  		FROM	테이블명
 		WHERE	조건식(conditions);		----> 	전체 행 중 원하는 행만 선택 : 행을 제어
 
 
 
	※ 조건식 구성
	----> 기준컬럼명	연산자	비교데이터	
				   -------
				  (비교연산자)
 			    >, <, >= , <=
 				=(같다, 등가연산자)
 			   !=(다르다), ^=, <>
 
  문) 30번 부서에 근무하는 사원의 사원번호, 사원명, 부서번호를 출력.
  	select empno, ename, deptno
  	from   emp
  	where  deptno = 30;
  	
  문) 30번 부서에 근무하지 않는 사원의 사원번호, 사원명, 부서번호를 출력.
  	select empno, ename, deptno
  	from   emp
  	where  deptno != 30;
  	(where deptno deptno=10 or deptno=20;)
 
  문)SMITH사원의 사원번호, 사원명, 입사일, 부서번호를 출력하시오
  	select empno, ename, hiredate, deptno
  	from   emp;
  	where  ename='SMITH'; (저장된 데이터는 대소문자를 확실하게 구분)
  	(where upper(ename) = upper('sMiTh'); --> 대소문자 구분xxx)
  	
---------------------------------------------------------------------------------

  문제1) 20번 부서에 근무하는 사원의 사원번호, 사원명, 직책, 급여를 출력하시오
  	select empno, ename, job, sal
  	from   emp
  	where  deptno=20;
  	 
  문제2) 직책이 MANAGER인 사원의 사원번호, 사원명, 직책, 입사일을 출력하시오
  	select empno, ename, job, hiredate
  	from   emp
  	where  job='MANAGER';
  	
  문제3) 급여가 2000 이상인 사원의 사원번호, 사원명, 급여를 출력하시오
  	select empno, ename, sal
  	from   emp
  	where  sal>2000;
  	
  문제4) FORD사원의 사원번호, 사원명, 부서번호를 출력하시오.
  	select empno, ename, deptno
  	from   emp
  	where  ename='FORD';
  	
  문제5) 1981년 6월 1일 이후에 입사한 사원의 사원번호, 사원명, 부서번호, 입사일을 출력하시오
  	select empno, ename, deptno, hiredate
  	from   emp
  	where  hiredate > '1981-6-1';
  	where  hiredate > '1981/6/1'; ----> 묵시적 형변환
  	(where hiredate >= to_date('1981/06/01);) --> 명시적 형변환/이거 많이 쓰셈
  	---> 날짜는 대소비교 가능!	어제 < 오늘 < 내일
  	
  문제6) 10번 부서에 근무하는 사원의 사원번호, 사원명, 매니저의 사원번호를 출력하시오.
  	select empno, ename, mgr
  	from   emp
  	where  deptno=10;
  	
  문제7) 20번과 30번 부서에 근무하는 사원의 사원번호, 사원명, 매니저의 사원번호를 출력하시오
  	select empno, ename, mgr
  	from   emp
  	where  deptno in(20, 30);
  	
  문제8) 10,20번 부서의 부서번호, 부서명, 부서위치를 조회하시오.
  	select deptno, dname, loc
  	from   dept
  	where  deptno=10 or deptno=20;
  	
  문제9) 3등급 급여의 최소급여와 최대급여를 출력하시오.
  	select losal, hisal
  	from   salgrade
  	where  grade=3;
  
==================================================================================
 <조건식의 구성>
 	컬럼명	연산자	비교데이터
 	
 <LIKE연산자>
 	형식)	컬럼명 LIKE 'pattern'
 		----> 패턴과 닮은 컬럼이 속한 행을 조회
 		----> 패턴내의 예약문자(횟수를 표현하는 문자)
 				% : 0~n개의 문자를 대체
 				_ : 단 1개의 문자를 대체
 	
 	DB에 저장된 문자데이터 예) 'a', 'ab', 'ad', 'ac', 'abbbb' 'bababa'
 	
 	like 'a'	----> 'a'		: % 또는 _ 문자를 사용하지 않는다면 등호와 같은 결과!
 	
 	like 'a%' 	----> a문자로 시작하는 데이터!
 				----> 'a', 'ab', 'ad', 'abc', 'abbbb'
 				
 	like 'a__'	----> 'abc'
 	
 	like '%a'	----> a문자로 끝나는 데이터!
 				----> 'a', 'bababa'
 				
 	like '__c'	----> 'abc'
 	
 	like '%a%'	----> a문자를 포함하는 데이터!
 				----> 'a', 'ab', 'ad', 'ac', 'abbbb' 'bababa'
 				
 문제) 사원명이 'A'로 시작되는 사원의 정보(사원번호, 사원명, 급여)를 출력하시오
 	select empno, ename, sal
 	from emp
 	where ename like 'A%';
 
 문제) 사원명이 'S'로 끝나는 사원의 정보(사원번호, 사원명, 급여)를 출력하시오
 	select empno, ename, sal
 	from emp
 	where ename like '%S';
 	
 문제) 사원명에 'A'문자가 포함된 사원의 정보(사원번호, 사원명, 급여)를 출력하시오
 	select empno, ename, sal
 	from emp
 	where ename like '%A%';
 
 문제) 사원명의 세번째 문자에 'A'문자가 포함된 사원의 정보(사원번호, 사원명, 급여)를 출력하시오
 	select empno, ename, sal
 	from emp
 	where ename like '__A%';
 	
 문제) 사원명에 '%'문자가 포함된 사원의 정보(사원번호, 사원명, 급여)를 출력하시오
 	===> 테스트를 위해 잠시 '%'포함된 사원 정보 입력!
 		==>insert into emp (empno, ename, sal) values (8000, '홍%길동', 2500);
 		
 	select empno, ename, sal
 	from emp
 	where ename like '%\%%' escape '\';

	rollback;	--------------> 작업취소(insert 이전의 상태로 돌림) 
	
 <IN연산자>
 	형식) 컬럼명 IN (value_list)
 			----> 컬럼값이 value_list에 데이터와 하나라도 일치한다면!
 			
  문제) 커미션을 300, 500, 1400받는 사원의 정보(사원번호, 사원명, 부서번호, 커미션)를 출력하시오.
  	select empno, ename, deptno, comm
  	from   emp
  	where  comm = 300 or comm = 500 or comm = 1400
  	
  	select empno, ename, deptno, comm
  	from   emp
  	where  comm in(300, 500, 1400);
  	
 <BETWEEN AND 연산자> : 범위 조건시 사용
 	형식)	컬럼명 BETWEEN a AND b;	===> a : 최소값, b : 최대값 ==> a이상 b이하
 			컬럼명 BETWEEN 최소값 AND 최대값
 			
 	※주의) BETWEEN AND 연산자는 초과와 미만은 표현 못함!
 	
 	문제) 급여가 1600 이상이고 3000 이하인 사원의 정보(사원번호, 사원명, 급여)를 출력하시오
 		select empno, ename, sal
 		from   emp
 		where  sal between 1600 and 3000;
 
 	문제) 커미션을 받는 사원의 사원번호, 사원명, 부서번호, 커미션을 출력하시오.
 		select empno, ename, deptno, comm
 		from   emp
 		where  comm is not null or comm = 0;
 
  	문제) 커미션을 받지않는(커미션이 null인, 커미션을 받지않은 조건) 사원의 사원번호, 사원명, 부서번호, 커미션을 출력하시오.
  		select empno, ename, deptno, comm
  		from   emp
  		where  comm is null;
  		where comm = 'null'; ---> 결과 행 없음
  		
  		★★데이터값이 null인 것을 체크(비교)		: 칼럼명 IS NULL
  				  null이 아닌것을 체크(비교)	: 컬럼명 IS NOT NULL
  	
  	문제) 커미션을 받을 조건이 되는 사원의 사원 번호, 사원명, 부서번호, 커미션을 출력하시오.
  		select empno, ename, deptno, comm
  		from   emp
  		where  comm is not null;
  	
 <NULL 데이터>★
  - 미확정 데이터 (같은 행에서 입력되지 않은 데이터)
  - 연산, 할당, 비교가 불가능! (결과행에서 배제)
  			  ---
  			  comm = null
  	---
  	3000 + null --> null
  
	문제) 전체 사원의 사원번호, 사원명, 급여, 연봉(comm포함)을 출력하시오.
									 ---
									 sal*12+comm
									 
		select empno, ename, sal, sal*12+NVL(comm,0) "연봉"
		from emp;
  	
  <NVL함수>
   - null변환 함수
	형식)
		NVL( null값이 예상되는 컬럼명, 대체할 데이터 )
		---> 주의 : 첫번째 인자와 두번째 인자는 서로 자료형이 같아야 함!
		
		
	문제) 사원들의 사원번호, 사원명, 커미션을 출력하되
		  커미션을 받지않는(커미션의 값이 null) 사원들은 0으로 출력하시오.
  	 	select empno, ename, NVL(comm, 0) COMM
  	 	from emp;
  	 	
  	문제) 사원들의 사원번호, 사원명, 커미션을 출력하되
  		커미션을 받지않는(커미션의 값이 null)사원들은 '없음'으로 출력하시오.
  		select empno, ename, NVL(comm, '없음') COMM
  	 	from emp;
  	 	---> 에러발생 ORA-01722: invalid number
  	 	---> NVL내의 인자가 서로 다른 자료형을 가짐(comm-NUMBER, '없음'-CHAR)
  	 	
  		
  				to_number					to_date
  		<-----------------------	----------------------->
  	NUMBER						CHAR						DATE
  		----------------------->	<-----------------------
  				to_char						to_char
  	
  		select empno, ename, NVL(to_char(comm), '없음') COMM
  	 	from emp;
  	
  	문제) 10번 부서에 근무하는 사원들의 사원번호, 사원명, 직책, 매니저(상사)를 출력하세요
  		 (단, 매니저가 없는 경우 'CEO'를 출력하시오.)
  	
  	
============================================================================
 <ORDER BY절>
  - 정렬하여 출력
  
   형식)
   select 	컬럼명
   from		테이블명
   where	조건식
   ORDER BY (정렬하고자 하는)컬럼명 [ASC|DESC];

	---> ASC (ascending)  : 오름차순 정렬 (기본값!!) 
	---> DESC(descending) : 내림차순 정렬
	
	문제) 30번 부서에 근무하는 사원의 사원번호, 사원명, 급여를 출력하되
		 사원번호에 대해 내림차순으로 정렬하시오.
		 select empno, ename, sal
		 from emp
		 where deptno=30;
		 order by empno desc;
		 
	문제) 30번 부서에 근무하는 사원의 사원번호, 사원명, 급여를 출력하되
		 사원명에 대해 오름차순으로 정렬하시오.
		 select empno, ename, sal
		 from emp
		 where deptno=30
		 order by ename asc;
		 
	문제) 30번 부서에 근무하는 사원의 사원번호, 사원명, 급여를 출력하되
		 급여를 많이 받는 순으로 정렬하시오.
		 select empno, ename, sal
		 from emp
		 where deptno=30
		 order by sal desc;

	문제) 가장 최근에 입사한 사원부터 사원번호, 사원명, 급여, 입사일을 출력하시오.
		 select empno, ename, sal, hiredate
		 from emp
		 order by hiredate desc;
	
	문제) 급여가 많은 순으로 사원번호, 사원명, 급여를 출력하시오.
		(단, 급여가 같을 경우 사원명을 기준으로 오름차순 출력하시오.)
		 select empno, ename, sal
		 from emp
		 order by sal desc, ename asc;


