 4. 자바스크립트에서 문자열(text) 표현	
 	 ----> 작은 따옴표와 큰 따옴표를 구분 없이 사용! (전혀 차이가 X)
 	 
 	name1 = "홍길동"; (O)
 	name2 = '길라임'; (O)
 	name3 = "김주원'; (X)			   
 	
 				   
 5. 자바스크립트는 구분자, 종결자 역할을 하는 ';'을 생략하는것이 가능.
 	==> 이유 : 라인(줄바꿈)을 통해 서로 다른 문자을 구분하기 때문.
 	
 	name = '길동'
 	age = 13
 	--> (O)
 	
 	name = "라임" age = 15
 	--> (X)
 	
 	name = "주원"; age = 17
 	--> (O)
 	
 	
 6. 문자열 비교
 	자바 case)
 			"java".equals("JAVA")	==> (O) 문자열 내용 비교
 			"java" == "JAVA"		==> (O) 메모리 주소 비교
 			
 	자바스크립트 case)
 			"javascript".equals("JAVASCRIPT")	==> (X) 에러발생
 	
 			
 7. '==' 연산자와 		'==='연산자
    ---------   	----------
         등가연산자		 등가연산자(엄격한 비교연산자)
    데이터 내용만 비교		 1.자료형 비교 2.내용비교
  (자동 형변환 발생)
  
  	관련 연산자)
  			!= (비교연산자)  과   !=== (엄격한 비교연산자)
  
  
 8. 조건문 

	if(조건식){
		조건식의 결과가 참일 때 실행할 문장;
	}
	---> 실행 할 문장이 한 개 였을때 영역 괄호{}는 생략가능!
	
	if(조건식){
		조건식의 결과가 참일 때 실행할 문장;
	} else {
		조건식의 결과가 거짓일 때 실행 할 문장;
  
  	if(조건식1){
  	
  	} else
  	
  	
  	※차이점
  		if(조건식 ==> boolean, 숫자, 객체){
  		
  		}
  		
  		숫자 : 0인 수(false), 0 아닌 수(true)로 구분
  		객체 : 브라우저에서 지원되는 객체인지 아닌지 판별. ---> 변수에 값이 존재하는지 판단.
  		
  		존재하는 객체(문자열, 브라우저가 지원하는 객체)		---> true
  		null, undefined							---> false
  			  ---------
  			초기화 되지 않은 변수
  		
 9. 빈 문자열 체크
 	1) str.length == 0
 		---> 자바스크립트 문자열 길이 구하기 : str.length사용
 			 str.length() : 에러발생 -> length()메소드 지원 X
 			 
 	2) str == ''
 		---> 2)번을 많이 사용
 		
 10. 함수(메소드) 정의! ★★★
 	
 	자바case)
 			void hello(String name, int age){
 			
 			}
 			
 			int hello(String name, int age){
 				return 100;
 			}
 
 	자바스크립트case)
 			function hello(name, age){}
 			function hello(name, age){return 100;}
 			
 	함수 형식)
 			function 함수명(){
 			
 			} ---> return; 생략가능
 			
 			function 함수명(변수명1, 변수명2){
 				return "리턴데이터";
 			} 
 			
 		※ 주의 : 자바스크립트의 함수는 오버로딩을 제공할까요?
 			--> 기본적으로 제공X
 
 		function hello(){
 			안녕!
 		}
 		
 		hello(); 호출 ----> 안녕!
 		
 		function hello(){
 			씬짜오!
 		}
 
 		hello(); 호출 ----> 씬짜오!
 		
 		function hello(name){
 			봉쥬르!
 		}
		---> 에러가 발생하지 않는다!
		
		hello(); 호출 		----> 봉쥬르!
 		hello('나길동'); 		----> 봉쥬르!
 		hello('나길동',13); 	----> 봉쥬르!
 		----> 함수 호출 시 매개변수(인자)의 갯수와 상관없이 함수명만 일치한다면 호출 가능
 		----> 같은 영역(파일)에 동일한 이름의 함수가 여러개 존재한다면 제일 아래에 있는 함수로 overwrite됨
 
 
 
 
 
 
  
  
  
====================================================================================  
 <mission>
   문제1) 브라우저에 1~5까지 출력하시오. (for문 사용)
   		----> 1 2 3 4 5
   
   문제2) 5에서 1까지 브라우저에 출력하시오.(for문 사용)
   		----> 5
   			  4
   			  3
   			  2
   			  1
   			  
   문제3) 브라우저에 출력하시오. (for문 사용)
   		----> [3, 6, 9, 12]
   		
   문제4) 구구단 3단을 출력하시오. (for문 사용)
    3*1 = 3
    3*2 = 6
    ....
    3*9 = 27
    
   문제5) 구구단(2단 ~ 9단)을 브라우저에 출력하시오. (조건 : 열을 맞추어 출력, 다중 for문 사용)
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  