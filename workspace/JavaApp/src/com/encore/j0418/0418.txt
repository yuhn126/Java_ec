<발표>
	삼항연산자 형식) 조건식 ? A : B
	  ---> 조건식의 결과가 true였을때 A리턴, 결과가 false였을때 B리턴
 	예) boolean b = 조건식1 ? true : false;
	 
		String gender = 조건식2 ? "남자" : "여자";
		---->String gender = su%2!=0 ? "남자" : "여자";
	
		int su = 조건식3 ? 100 : 300;    
  
 	- 분기테이블(점프테이블) : 데이터가 저장된 주소를 참조하는 테이블?
-------------------------------------------------------------- 
 
 toString() : 문자열 변환 메소드
 
  ★문자열 내용 비교!!
		 String s1 = "java";  String s2 = new String("java");
		  
		 s1 == s2		 : 메모리 비교		--> false
		 s1.equals(s2)   : 값(내용)비교	--> true
 
 
 ===============================================================================
 <클래스 객체 비교>
  <정리>
		클래스 참조 변수1 == 클래스 참조 변수2 ----> 메모리 주소 비교!
		속성변수1 == 속성변수2            ----> 데이터 값 비교!
		 --> 예) int su1 = 30; int su2 = 30; System.out.println(su1==su2);
		 
================================================================================

 int su;	// 속성 변수!!(기본자료형으로 선언된 변수)
 	su = 100;
 	su.~ (x)
 
 Integer su2;	// 참조 변수!(데이터의 위치는 메모리, 그 메모리이 주소정보를 담는 변수)
 		 su2 = new Integer(100);
 	 su2.~ (o)
 
-------------------------JDK 5 버전 이후-------------------------
 --> 오토박싱, 언박싱 지원!
 
 int su3 = new Integer(300);
 
 Integer su4 = 300;
 
 ※ Wrapper 클래스
 
 	기본자료형                             래퍼클래스
 	byte        ---->      Byte
 	short       ---->      Short
 	int         ---->      Integer
 	long        ---->      Long
 	flaat       ---->      Float
 	double      ---->      Double
 	char        ---->     character
 	boolean     ---->      Boolean
 	
 	
 	
===================================================================================
 < Mission0419 >
	<행운의 로또번호 생성기>
	1. 서로 겹치지 않는 (중복되지 않는) 숫자 6개 생성
	2. 각 숫자는 1 ~ 45 범위 내의 숫자
	3. 매번 실행시 다른 숫자 출력
	---> 랜덤 수 : Random클래스 - nextInt(int bound)사용
	(public int nextInt(int bound) 0이상 bound미만 범위의 int형 난수 반환)
	4. 다섯회 출력
	5. 각 번호는 오름차순 정렬
	---> Arrays클래스의 sort()메소드 사용.
	
	출력형태) 
	
	★★ 금주 행운의 로또 번호 ★★
	1회 : 2, 12, 15, 34, 36, 42
	2회 : 1, 2, 9, 33, 42, 45
	3회 : 9, 12, 14, 19, 34, 40
	4회 : 5, 10, 15, 18, 19, 22
	5회 : 7, 9, 15, 19, 39, 41
	
==============================================================
 <문제>
	배열을 이용하여 사람의 이름을 저장, 삭제, 수정, 검색하는 클래스를 작성하시오.
	
	- 최대 5명의 이름을 입력.
		---> String []names = new String[5];
	- 저장된 이름은 서로 겹치지 않는다는 가정.
 
	
	실행 결과)
	
	<이름메뉴>
	1.추가  2.검색  3.수정  4.삭제  5.종료
	번호 입력 --> 1
	
	이름입력 : 홍길동
	
	<이름메뉴>
	1.추가  2.검색  3.수정  4.삭제  5.종료
	번호 입력 --> 1
	
	이름입력 : 길라임
	
	<이름메뉴>
	1.추가  2.검색  3.수정  4.삭제  5.종료
	번호 입력 --> 1
	
	이름입력 : 김주원
	
	<이름메뉴>
	1.추가  2.검색  3.수정  4.삭제  5.종료
	번호 입력 --> 2
	
	#이름목록
	  홍길동
	  길라임
	  김주원
	
	<이름메뉴>
	1.추가  2.검색  3.수정  4.삭제  5.종료
	번호 입력 --> 3
	
	기존이름입력 : 길라임
	변경이름입력 : 차라임
	
	<이름메뉴>
	1.추가  2.검색  3.수정  4.삭제  5.종료
	번호 입력 --> 2
	
	#이름목록
	  홍길동
	  차라임
	  김주원
	  
	<이름메뉴>
	1.추가 2.검색 3.수정 4.삭제 5.종료
	번호입력 ==> 4

	삭제이름입력: 홍길동

	<이름메뉴>
	1.추가 2.검색 3.수정 4.삭제 5.종료
	번호입력 ==> 2

	#이름목록
 	  차라임
 	  김주원

	<이름메뉴>
	1.추가 2.검색 3.수정 4.삭제 5.종료
	번호입력 ==> 5
	
	---END---
========================================================
<클래스작성>
1. NameMenu.java (이름에 대한 추가, 검색, 수정, 삭제 기능 메소드 정의)
	- 멤버필드 : 배열객체(String names[])
	
	멤버메소드)
	 -추가(add, insert, plus, push, append, create)
	 	  names[0]가 빈자리인지 아닌지 체크 
	 	  		names[0] == null	  (O)
	 	  		names[0].equals(null) (X) 메모리 비교
	 	  		
	 -검색(search, find, select, browse)
	 -수정(update, edit, modify, alter)
	 -삭제(delete, remove, cancel, erase, clear, drop)
	 	  names[0]가 "홍길동"인지 아닌지 체크
	 	  		names[0] == delName	     (x)
	 	  		names[0].equals(delName) (O) 내용 문자열 비교


	 
2. NameMenuTest.java
	- main() 포함
		--> 반복되는 메뉴 출력
		--> 번호 입력 (1~5), 추가 수정 삭제에 필요한 이름 입력
	
	
}

 