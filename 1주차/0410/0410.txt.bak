<조건문>
- 조건에 따라 실행할 문장들을 제어하는 역할.
- 반드시 메소드내에 기술

1.if문
  형식)
     if(조건식){  //조건식 conditions : boolean데이터!
	//조건식의 결과가 true일때 실행 할 문장;
     }
2.if~else문
  형식)
     if(조건식){
	//조건식의 결과가 참일때 실행할 문장;
     }else{
	//조건식의 결과가 거짓일때 실행할 문장;
     }

     ※주의 : else는 홀로 사용이 불가, 반드시 if(){}블럭 뒤에 위치해야 함.

3.switch~case문

    형식) 
    	swutch(기준데이터)
	{
	    case 비교데이터1: 
	        실행 할 문장;
            case 비교데이터2: 
	        실행 할 문장;
	    case 비교데이터3: 
	        실행 할 문장;
	}

	int su=1;

	switch(su){
	    case 1:
	    	System.out.println("안녕");
		break;
	    case 2:
	    	System.out.println("신짜오);
		break;
	    case 3:
	    	System.out.println("Hello");
		break;
	    default :  // 일치하는 case값이 없을때 실행할 문장을 표현
	    	
	}

	swutch(수식)	//수식의 데이터 값 : 정수(byte, short, int), 문자(char)
					  문자열(String)  ----> JDK7버전 이후부터 포함
	{
	    case 비교데이터1 : 
	        실행 할 문장;
            case 비교데이터2 : 
	        실행 할 문장;
	    case 비교데이터3 : 
	        실행 할 문장;
	    default :
	}

	※ 제어문 break
	  ----> switch블럭, 반복문 블럭 내에서 사용.
	  ----> break를 감싸는 블럭을 벗어나는 역할


4.if~elif~else문
  - 서로 연결되 조건식을 표현할 때 사용, 필터링, 수의 범위 표현

  형식)

  	if(조건식1){
	    조건식1이 참일때 실행할 문장;
	}else if(조건식2){
	    조건식1이 거짓이고 조건식2가 참일때 실행할 문장;
	}else if(조건식3){
	    조건식1,2가 거짓이고 조건식3이 참일때 실행할 문장;
	}else{
            조건식1,2,3이 거짓일 때 실행할 문장;
	}


====================================================

class 클래스명{
    //변수선언
    int su;
    boolean flag;
    double d;

    String str;
    A obj;
    //메소드정의
}

리턴형 메소드명(){
    //변수선언		int min;
    //변수초기화		su = 300;    min = 0;
    //메소드호출		System.out.println();
    //조건문		if(조건식){}
    //반복문		for(){}
}

<반복문> Loop
1. for문
    - 일정횟수 반복할 때 사용
    - 규칙적인 수를 표현할 때 사용
    - 배열의 인덱스를 표현할 때 사용

    형식)
    for(초기화1; 조건식2; 증감연산자3){

	    반복적으로 실행할 문장4;

    } // 실행순서 : 1 - 2(true) - 4 - 3 - 2(true) - 4 - 3 - 2(true) - 4 - 3 - 2(false) -> for문 탈출

    

    예)
    for(int i=0; i<5; i++){
        System.out.println("안녕");
    }
2. while문
    - 조건이 참인동나 반복 실행.
    - 조건이 만족되지 않는다면 한번도 실행되지 않을 수 있고
      조건이 만족한다면 무한히 실행할 수 있음
      ---> 실행횟수 : 0 ~ 무한대
      ※ if문의 반복횟수 : 0 또는 1
    - 반복되는 횟수가 일정치 않을때 사용!
    -서버의 리스너를 표현할때 --> 무한반복할때

    [형식]
    while(조건식){
	//조건식 결과가 참인 동안 실행할 문장;
    }

3. do~while문
    - while문과 동일
      차이점 : 실행 횟수(1 ~ 무한대)
      	      -> 조건식의 결과와 상관없이 무조건 한번은 실행!

    [형식]
     do{
         반복 실행 할 문장
     }while(조건식);

=====================================================
<wpdjans>
1.break문
    - switch블럭 또는 loop블럭(for,while,do~while)내에서 사용하며 해당 영역을 빠져나가는 역할
    - 사용 : break;

2. continue문
    - 반드시 loop영역 내에서만 사용!
    - loop영역의 끝 괄호 역할!
      for : 증감자 ---> 조건식
      while : 조건식
      do~while : 조건식
    - 사용 : continue;

